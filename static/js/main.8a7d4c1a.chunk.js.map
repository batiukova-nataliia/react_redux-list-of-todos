{"version":3,"sources":["features/filter.ts","features/currentTodo.ts","features/todos.ts","app/store.ts","app/hooks.ts","api.ts","components/Loader/Loader.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","actions","todo","type","payload","currentTodoReducer","state","arguments","length","undefined","action","initialState","query","status","ALL","filterActions","filter","filterReducer","_objectSpread","todosReducer","rootReducer","combineReducers","currentTodo","todos","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppSelector","useDispatch","useSelector","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","_jsx","className","children","TodoList","_useState","useState","_useState2","_slicedToArray","setTodos","dispatch","useEffect","todosFromServer","filteredTodos","isMatchingStatus","completed","trim","title","toLowerCase","includes","_Fragment","some","_jsxs","map","isTodoClicked","id","classNames","onClick","currentTodoActions","TodoFilter","_useAppSelector","onSubmit","event","preventDefault","value","onChange","selectedFilter","target","ACTIVE","COMPLETED","placeholder","searchText","style","pointerEvents","TodoModal","user","setUser","_useState3","_useState4","isLoading","setIsLoading","userId","concat","userData","finally","href","email","name","App","Root","Provider","Router","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8a7d4c1a.chunk.js","sourcesContent":["// /* eslint-disable no-param-reassign */\ntype SetFilterQuery = {\n  type: 'currentTodo/SET_QUERY',\n  payload: string,\n};\n\nconst setFilterQuery = (query: string): SetFilterQuery => ({\n  type: 'currentTodo/SET_QUERY',\n  payload: query,\n});\n\nexport enum Filter {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n\ntype SetFilterAction =\n  | { type: 'filter/SET_FILTER'; payload: Filter }\n  | { type: 'currentTodo/SET_QUERY'; payload: string };\n\nconst setStatus = (filter: Filter): SetFilterAction => ({\n  type: 'filter/SET_FILTER',\n  payload: filter,\n});\n\nconst initialState = {\n  query: '',\n  status: Filter.ALL,\n};\n\nexport const filterActions = {\n  setStatus,\n  setFilterQuery,\n};\n\nconst filterReducer = (state = initialState, action: SetFilterAction) => {\n  switch (action.type) {\n    case 'currentTodo/SET_QUERY':\n      return { ...state, query: action.payload };\n    case 'filter/SET_FILTER':\n      return { ...state, status: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Todo } from '../types/Todo';\n\nexport const actions = {};\n\nconst todosReducer = (): Todo[] => {\n  return [];\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","/* eslint-disable no-console */\n/* eslint-disable no-nested-ternary */\nimport { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { useDispatch } from 'react-redux';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\n\nimport { Todo } from '../../types/Todo';\nimport { useAppSelector } from '../../app/hooks';\nimport { getTodos } from '../../api';\nimport { Loader } from '../Loader';\n\nexport const TodoList = (\n) => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    getTodos().then((todosFromServer) => setTodos(todosFromServer));\n  }, []);\n\n  const filter = useAppSelector((state) => state.filter);\n  const query = useAppSelector((state) => state.filter.query);\n  const currentTodo = useAppSelector((state) => state.currentTodo);\n  const filteredTodos = todos.filter((todo) => {\n    const isMatchingStatus\n      = (filter.status === 'active' && !todo.completed)\n      || (filter.status === 'completed' && todo.completed)\n      || filter.status === 'all';\n\n    if (isMatchingStatus && query.trim()) {\n      return todo.title.toLowerCase().includes(query.toLowerCase());\n    }\n\n    return isMatchingStatus;\n  });\n\n  const handleViewButtonClick = (selectedTodo: Todo) => {\n    dispatch(currentTodoActions.setTodo(selectedTodo));\n  };\n\n  return (\n    <>\n      {filteredTodos.length === 0 ? (\n        <Loader />\n      ) : (\n        filteredTodos\n          .some((todo) => todo.title\n            .toLowerCase().includes(query.toLowerCase()))\n          ? (\n            <table className=\"table is-narrow is-fullwidth\">\n              <thead>\n                <tr>\n                  <th>#</th>\n\n                  <th>\n                    <span className=\"icon\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  </th>\n\n                  <th>Title</th>\n                  <th> </th>\n                </tr>\n              </thead>\n\n              <tbody>\n\n                {filteredTodos.map((todo) => {\n                  const isTodoClicked = todo.id === currentTodo?.id;\n\n                  return (\n                    <tr data-cy=\"todo\">\n                      <td className=\"is-vcentered\">{todo.id}</td>\n                      <td className=\"is-vcentered\">\n                        {todo.completed\n                        && (\n                          <th>\n                            <span className=\"icon\">\n                              <i className=\"fas fa-check\" />\n                            </span>\n\n                          </th>\n                        )}\n                      </td>\n\n                      <td className=\"is-vcentered is-expanded\">\n                        <p className={classNames({\n                          'has-text-danger': !todo.completed,\n                          'has-text-success': todo.completed,\n                        })}\n                        >\n                          {todo.title}\n                        </p>\n                      </td>\n\n                      <td className=\"has-text-right is-vcentered\">\n                        <button\n                          data-cy=\"selectButton\"\n                          className=\"button\"\n                          type=\"button\"\n                          onClick={() => handleViewButtonClick(todo)}\n                        >\n                          <span className=\"icon\">\n                            {!isTodoClicked ? (\n                              <i className=\"far fa-eye\" />\n\n                            ) : (\n                              <i className=\"far fa-eye-slash\" />\n\n                            )}\n                          </span>\n                        </button>\n                      </td>\n                    </tr>\n\n                  );\n                })}\n\n              </tbody>\n            </table>\n\n          ) : (\n            <p className=\"notification is-warning\">\n              There are no todos matching current filter criteria\n            </p>\n          )\n\n      )}\n\n    </>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport { Filter, filterActions } from '../../features/filter';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useDispatch();\n  const { query, status } = useAppSelector((state) => state.filter);\n\n  const handleFilterChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const selectedFilter = event.target.value;\n\n    switch (selectedFilter) {\n      case Filter.ALL:\n        dispatch(filterActions.setStatus(Filter.ALL));\n        break;\n      case Filter.ACTIVE:\n      case Filter.COMPLETED:\n        dispatch(filterActions.setStatus(selectedFilter));\n        dispatch(filterActions.setFilterQuery(''));\n        break;\n      default:\n    }\n  };\n\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const searchText = event.target.value;\n\n    dispatch(filterActions.setFilterQuery(searchText));\n  };\n\n  const handleDeleteQuery = () => {\n    dispatch(filterActions.setFilterQuery(''));\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={handleFilterChange}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleSearchChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query\n          && (\n            <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={handleDeleteQuery}\n              />\n            </span>\n          )}\n\n      </p>\n    </form>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { Loader } from '../Loader';\n\nexport const TodoModal: React.FC = () => {\n  const dispatch = useDispatch();\n  const currentTodo = useAppSelector((state) => state.currentTodo);\n  const closeModal = () => {\n    dispatch(currentTodoActions.removeTodo());\n  };\n\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (currentTodo) {\n      setIsLoading(true);\n      getUser(currentTodo.userId)\n        .then((userData) => {\n          setUser(userData);\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n  }, [currentTodo]);\n\n  return (\n    <>\n\n      <div className=\"modal is-active\" data-cy=\"modal\">\n        <div className=\"modal-background\" />\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${currentTodo?.id}`}\n              </div>\n\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={closeModal}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {currentTodo?.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {currentTodo?.completed ? (\n                  <strong className=\"has-text-success\">Done</strong>\n\n                ) : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n\n                )}\n                {' by '}\n                <a href={`mailto:${user?.email}`}>\n                  {user?.name}\n                </a>\n              </p>\n            </div>\n          </div>\n\n        )}\n\n      </div>\n\n    </>\n  );\n};\n","import React from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { useAppSelector } from './app/hooks';\nimport { TodoModal } from './components/TodoModal';\n\nexport const App: React.FC = () => {\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <div className=\"box\">\n          <h1 className=\"title\">Todos</h1>\n          <div className=\"block\">\n            <TodoFilter />\n            <TodoList />\n            {currentTodo && (\n              <TodoModal />\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}